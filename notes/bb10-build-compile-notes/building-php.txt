# PHP 7.4.33 Build for BlackBerry QNX 8
# Build Date: [Current Date]

## Build Environment
- Host: macOS with Docker container for building
- Target: BlackBerry QNX 8 (ARM architecture)
- Compiler: GCC 9.3.0 cross-compiler (arm-blackberry-qnx8eabi-gcc)

## Build Steps

1. Create build directory and download PHP source:
   mkdir -p ~/php_build
   cd ~/php_build
   wget https://www.php.net/distributions/php-7.4.33.tar.gz
   tar -xzvf php-7.4.33.tar.gz
   cd php-7.4.33

2. Create dummy syslog.h header (QNX doesn't provide this):
   mkdir -p ~/php_build/include
   cat > ~/php_build/include/syslog.h << 'EOF'
   /* Dummy syslog.h for QNX */
   #ifndef _SYSLOG_H
   #define _SYSLOG_H

   /* Log levels */
   #define LOG_EMERG   0
   #define LOG_ALERT   1
   #define LOG_CRIT    2
   #define LOG_ERR     3
   #define LOG_WARNING 4
   #define LOG_NOTICE  5
   #define LOG_INFO    6
   #define LOG_DEBUG   7

   /* Facilities */
   #define LOG_KERN     (0<<3)
   #define LOG_USER     (1<<3)
   #define LOG_MAIL     (2<<3)
   #define LOG_DAEMON   (3<<3)
   #define LOG_AUTH     (4<<3)
   #define LOG_SYSLOG   (5<<3)
   #define LOG_LPR      (6<<3)
   #define LOG_NEWS     (7<<3)
   #define LOG_UUCP     (8<<3)
   #define LOG_CRON     (9<<3)
   #define LOG_AUTHPRIV (10<<3)
   #define LOG_FTP      (11<<3)
   #define LOG_LOCAL0   (16<<3)
   #define LOG_LOCAL1   (17<<3)
   #define LOG_LOCAL2   (18<<3)
   #define LOG_LOCAL3   (19<<3)
   #define LOG_LOCAL4   (20<<3)
   #define LOG_LOCAL5   (21<<3)
   #define LOG_LOCAL6   (22<<3)
   #define LOG_LOCAL7   (23<<3)

   /* Options */
   #define LOG_PID    0x01
   #define LOG_CONS   0x02
   #define LOG_ODELAY 0x04
   #define LOG_NDELAY 0x08
   #define LOG_NOWAIT 0x10
   #define LOG_PERROR 0x20

   /* Dummy function prototypes */
   void openlog(const char *ident, int option, int facility);
   void syslog(int priority, const char *format, ...);
   void closelog(void);

   #endif /* _SYSLOG_H */
   EOF

3. Fix PCRE2 JIT compilation issues (disable madvise usage for QNX):
   # Edit the file to add conditional compilation around the madvise call
   cat > fix_pcre.sed << 'EOF'
   /madvise/i\
   #if !defined(__QNX__) && !defined(__QNXNTO__)
   /madvise/a\
   #endif
   EOF

   sed -f fix_pcre.sed -i ext/pcre/pcre2lib/pcre2_jit_compile.c

4. Configure and build PHP:
   export CPPFLAGS="-I$HOME/php_build/include"
   export CC="arm-blackberry-qnx8eabi-gcc"
   export CXX="arm-blackberry-qnx8eabi-g++"

   ./configure --host=arm-blackberry-qnx8eabi \
     --build=$(gcc -dumpmachine) \
     --prefix=/accounts/1000/shared/misc \
     --disable-shared \
     --enable-static \
     --without-libxml \
     --disable-dom \
     --disable-xml \
     --disable-simplexml \
     --disable-xmlreader \
     --disable-xmlwriter \
     --without-pear \
     --without-sqlite3 \
     --without-pdo-sqlite \
     --disable-phar \
     --disable-opcache \
     --enable-cli \
     --without-iconv \
     --disable-posix \
     --with-pcre-jit=no

   make -j4 CPPFLAGS="-I$HOME/php_build/include"

5. Install:
   make install

## Features and Limitations
- This is a minimal CLI-only build of PHP 7.4.33
- XML, DOM, SimpleXML extensions are disabled
- POSIX, iconv, libxml, phar, opcache extensions are disabled
- Static build with no shared libraries
- No SQLite or MySQL support in this build
- PCRE JIT compilation is disabled

## Usage
- Run PHP scripts: /accounts/1000/shared/misc/bin/php script.php
- Check version: /accounts/1000/shared/misc/bin/php -v
- Run PHP code: /accounts/1000/shared/misc/bin/php -r "echo 'Hello, QNX!';"

## Notes
- Several customizations were needed to make PHP build on QNX
- Created dummy syslog.h header to provide missing constants
- Modified PCRE2 JIT compiler to avoid using madvise() which is unavailable on QNX
- Disabled features that would require additional libraries